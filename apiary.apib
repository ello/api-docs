FORMAT: 1A
HOST: https://ello.co/

# Ello V2 API

The Ello V2 API is the API driving all Ello clients, including the React Native Android app, the Swift iOS app, and the React web app.

This documenation is a work in progress.

### Getting Started

### Using this documentation

This documentation is primarally oriented at providing guidance on what endpoints are available and how to access them.

JSON structure is defined in our JSON Schemas, against which all endpoints are validated.

### Patterns

### Example Implementations

## Group Authentication

TODO

## Group Users & Posts

At it's heart Ello is comprised of two core data types, Users and Posts.

## Posts

Posts are represented as....

## Users

Users are represeted as....

## Group Discovery

The discovery endpoints are all targeted at helping users find the freshest, best content on Ello.

All discovery endpoint exclude adult content.

## Editorials [/api/v2/editorials]

Editorials are an Ello Staff curated resource highlighting the best content on network.

Editorials come in 3 kinds all mixed in the same stream, `post`, `post_stream`, and `external`:

* `post` editorials include a post alongside the response.
* `post_stream` editorials include an api endpoint to retreive a stream of posts to be consumed by an Ello API client.
* `external` include a web url to be opened in a browser.

### Editorial Stream [GET /api/v2/editorials{?per_page,before}]

Retreive a page of editorials of all types.

+ Parameters
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + before: 354 (number, optional) - Pagination cursor, where to start this page. Returned in the `link` header.


+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)
    + Headers

            Link: <https://ello.co/api/v2/editorials?before=979&per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/editorial.json"
            }

### Editorial Posts [GET /api/v2/editorials/post?token[]={token1}&token[]={token2}]

Get a set of posts by token. The `token[]` param can me used multiple times.

A populated version of this url is often returned by the `post_stream` kind
of editorial in the editorial stream.

+ Parameters
    + token1 : abc123 (string, required) - Token representing post in stream.
    + token2 : def345 (string, optional) - Token representing post in stream.

+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }


## Categories [/api/v2/categories]

### List All [GET /api/v2/categories]
A list of all the categories.
+ Response 200 (application/json)

### Recent Post Stream [GET /api/v2/categories/{slug}/posts/recent]
All the newest posts in the given category  - time ordered.
+ Response 200 (application/json)

### Trending Post Stream [GET /api/v2/categories/{slug}/posts/trending{?per_page,page,images_only}]
What is trending in the given category.

+ Parameters
    + slug: art (string, required) - The url `slug` property of the category desired.
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + page: 3 (number, optional) - What page to retreive.
        + default: 1
    + images_only: true (string, optional) - When present only posts with images will be included.

+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Headers

            Link: <https://ello.co/api/v2/categories/art/posts/trending?page=2&per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }

### Featured Post Stream [GET /api/v2/categories/posts/recent]
All the newest posts across all the categories  - time ordered.
+ Response 200 (application/json)

## Discovery [/api/v2/discover/posts]

### Recent Post Stream [GET /api/v2/discover/posts/recent{?per_page,before}]
All the newest posts across the network - time ordered.

+ Parameters
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + before: 23234324xsadfasdf (string, optional) - The pagination cursor, returned in the `link` header of the previous page.

+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Headers

            Link: <https://ello.co/api/v2/discover/posts/recent?before=abcd123per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }

### Trending Post Stream [GET /api/v2/discover/posts/trending{?per_page,page,images_only}]
What is trending across the entire network.

+ Parameters
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + page: 3 (number, optional) - What page to retreive.
        + default: 1
    + images_only: true (boolean, optional) - When present only posts with images will be included.

+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Headers

            Link: <https://ello.co/api/v2/discover/posts/trending?page=2&per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }


## Group Personal Resources

These resources are only available to the currently logged in user.

## Following Stream [/api/v2/following/posts]

### Recent Post Stream [GET /api/v2/following/posts/recent]
All the newest posts from the users you follow - time ordered.
+ Response 200 (application/json)

### Trending Post Stream [GET /api/v2/following/posts/trending{?per_page,page,images_only}]
What is trending from users you follow.

+ Parameters
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + page: 3 (number, optional) - What page to retreive.
        + default: 1
    + images_only: true (string, optional) - When present only posts with images will be included.

+ Request
    + Headers

            Authortization: Bearer User Authenticated JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Headers

            Link: <https://ello.co/api/v2/following/posts/trending?page=2&per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }

## Profile [/api/v2/profile]

### View [GET /api/v2/profile]
+ Response 200 (application/json)

### Update [PATCH /api/v2/profile]
+ Response 200 (application/json)

### Settings [GET /api/v2/profile/settings]
+ Response 200 (application/json)

### Blocked [GET /api/v2/profile/settings/blocked]
+ Response 200 (application/json)

### Muted [GET /api/v2/profile/settings/muted]
+ Response 200 (application/json)

## Group Search

## User Search [/api/v2/users]

### User Search [GET /api/v2/users?terms=terms]
+ Response 200 (application/json)

### Username Autocomplete [GET /api/v2/users/autocomplete?terms=terms]
+ Response 200 (application/json)

## Post Search [/api/v2/posts]

### Post Search [GET /api/v2/posts?terms=terms]
+ Response 200 (application/json)


## Group Network

TODO

## Group Other

TODO



## Group Appendix

### Terminology

* **Post Stream** - A list of posts that is paginated over. Includes post assets, author, and repost data.

### JSON Schemas

## Data Structures

### Post
+ id: 123 (string)
+ token: f8ywrbfd9vu0wniu-bqvn (string)
+ href: /api/v2/posts/6540 (string) - Relative url to retreive this post.
+ summary (array[PostBlock])
+ content (array[PostBlock])
+ body (array[RawPostBlock])
+ repost_content (array[PostBlock])
+ views_count: 1523 (number) - Number of views this post has received.
+ reposts_count: 0 (number) - Number of reposts this post has recieved.
+ loves_count: 0 (number) - Number of loves this post has received.
+ comments_count: 0 (number) - Number of comments this post has received.
+ watching: false (boolean) - Is the accessing user watching for activity on this post?
+ reposted: false (boolean) - Has the accessing user reposted this post?
+ loved: false (boolean) - Has the accessing user loved this post?
+ is_adult_content: false (boolean) - Is this post marked as adult content.
+ content_warning: (string, optional) - Displays warning for 3rd party content when applicable.
+ created_at: "2017-05-17T22:55:05.229652Z" (date) - When post was created.
+ repost_id: (string, optional)
+ author_id: 456 (string)
+ links (object)
    + author (object)
        + id:   456 (string)
        + href: /api/v2/users/456 (string)
        + type: users (string)
    + categories: 321 (array[string])
    + assets 987 (array[string])
    + reposted_source (object, optional)
        + id:   123 (string)
        + href: /api/v2/posts/123 (string)
        + type: posts (string)
    + reposted_author (object, optional)
        + id:   456 (string)
        + href: /api/v2/users/456 (string)
        + type: users (string)

### PostBlock (enum[ImagePostBlock,TextPostBlock])

### ImagePostBlock
+ kind: image (string)
+ link_url: null (string)
+ data (object)
    + url: https://assets1.ello.co/uploads/asset/attachment/987/ello-optimized-67949d24.jpg",
    + alt: "ello world"
+ links (object)
    + assets: 987 (string)


### User
+ id: 456 (string)

### Asset
+ id: 789 (string)

### PostStream

+ posts (array[Post])
+ linked (object)
    + users (array[User])
    + assets (array[Asset])
