FORMAT: 1A
HOST: https://ello.co/

# Ello V2 API

The Ello V2 API is the API driving all Ello clients, including the React Native Android app, the Swift iOS app, and the React web app.

This documenation is a work in progress.

### Getting Started

### Using this documentation

This documentation is primarally oriented at providing guidance on what endpoints are available and how to access them.

JSON structure is defined in our JSON Schemas, against which all endpoints are validated.

### Patterns

### Example Implementations

All of Ello's client application are all open source. They can all serve as good example clients.

* iOS (Swift) - https://github.com/ello/ello-ios
* Web (React) - https://github.com/ello/webapp
* Android (React Native) - https://github.com/ello/bender

## Group Authentication

TODO

## Group Discovery

The discovery endpoints are all targeted at helping users find the freshest, best content on Ello.

All discovery endpoint exclude adult content.

### Editorials [/api/v2/editorials]

Editorials are an Ello Staff curated resource highlighting the best content on network.

Editorials come in 4 kinds all mixed in the same stream, `post`, `post_stream`, `internal`, and `external`:

* `post` editorials include a post alongside the response.
* `post_stream` editorials include an api endpoint to retreive a stream of posts to be consumed by an Ello API client.
* `internal editorials link to a page on the ello site and have a `path` property.
* `external` include a web url to be opened in a browser and have a `url` property.

#### Editorial Stream [GET /api/v2/editorials{?per_page,before}]

Retreive a page of editorials of all types.

+ Parameters
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + before: 354 (number, optional) - Pagination cursor, where to start this page. Returned in the `link` header.


+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (EditorialStream)
    
    + Headers

            Link: <https://ello.co/api/v2/editorials?before=979&per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/editorial.json"
            }

#### Editorial Posts [GET /api/v2/editorials/post?token[]={token1}&token[]={token2}]

Get a set of posts by token. The `token[]` param can me used multiple times.

A populated version of this url is often returned by the `post_stream` kind
of editorial in the editorial stream.

+ Parameters
    + token1 : abc123 (string, required) - Token representing post in stream.
    + token2 : def345 (string, optional) - Token representing post in stream.

+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }


### Categories [/api/v2/categories]

#### List All [GET /api/v2/categories{?meta,all}]
A list of all the categories.

+ Parameters
    + meta: true (boolean, optional) - Include 'meta' categories such as 'featured', 'trending' and 'recent'.
        + default: false
    + all: true (boolean, optional) - Include inactive categories.
        + default: false

+ Response 200 (application/json)

    + Attributes
            
            + categories (array[Category])
            + linked (object)
                + users (array[User])
                + promotionals (array[Promotional])
    
    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/category.json"
            }

#### Get Category [GET /api/v2/categories/{id}]
Get a single category

+ Parameters
    + id: 1234 (string, required)

+ Response 200 (application/json)

    + Attributes
            
            + categories (Category)
            + linked (object)
                + users (array[User])
                + promotionals (array[Promotional])
    
    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/category.json"
            }

#### Recent Post Stream [GET /api/v2/categories/{slug}/posts/recent{?per_page,before}]
A paginated, time ordered stream of posts in the given category.

+ Parameters
    + slug: art (string, required) - The url `slug` property of the category desired.
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + before: 32423Aasdf34er (string, optional) - Pagination Cursor.

+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Headers

            Link: <https://ello.co/api/v2/categories/art/posts/recent?before=asdfsdfA23434&per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }

#### Trending Post Stream [GET /api/v2/categories/{slug}/posts/trending{?per_page,page,images_only}]
What is trending in the given category.

+ Parameters
    + slug: art (string, required) - The url `slug` property of the category desired.
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + page: 3 (number, optional) - What page to retreive.
        + default: 1
    + images_only: true (string, optional) - When present only posts with images will be included.

+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Headers

            Link: <https://ello.co/api/v2/categories/art/posts/trending?page=2&per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }

#### Featured Post Stream [GET /api/v2/categories/posts/recent{?per_page,before}]
All the newest posts across all the categories  - time ordered.

+ Parameters
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + before: 32423Aasdf34er (string, optional) - Pagination Cursor.

+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Headers

            Link: <https://ello.co/api/v2/categoriesp/posts/recent?before=asdfsdfA23434&per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }

### Discovery [/api/v2/discover/posts]

#### Recent Post Stream [GET /api/v2/discover/posts/recent{?per_page,before}]
All the newest posts across the network - time ordered.

+ Parameters
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + before: 23234324xsadfasdf (string, optional) - The pagination cursor, returned in the `link` header of the previous page.

+ Request
    + Headers

            Authortization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Headers

            Link: <https://ello.co/api/v2/discover/posts/recent?before=abcd123per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }

#### Trending Post Stream [GET /api/v2/discover/posts/trending{?per_page,page,images_only}]
What is trending across the entire network.

+ Parameters
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + page: 3 (number, optional) - What page to retreive.
        + default: 1
    + images_only: true (boolean, optional) - When present only posts with images will be included.

+ Request
    + Headers

            Authorization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Headers

            Link: <https://ello.co/api/v2/discover/posts/trending?page=2&per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }

## Group Contests

The contest endpoints revolve around the primary way Ello helps artist get paid

### Artist Invites [/api/v2/artist_invites]


#### List [GET /api/v2/artist_invites{?per_page,page}]
Retreive a page of editorials of all types.

+ Parameters
    + per_page: 10 (number, optional) - Number of artist invites to return per page.
        + default: 10
    + page: 354 (number, optional) - Page number, where to start this page. Next page returned in the `link` header.

+ Request
    + Headers

            Authorization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (ArtistInviteStream)
    
    + Headers

            Link: <https://ello.co/api/v2/artist_invites?page=2&per_page=10>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/artist_invite.json"
            }
            

#### Show [GET /api/v2/artist_invites/{slug}]
Retreive a page of editorials of all types.

+ Parameters
    + slug: ello-guest-editorial (string, required) - Slug of the artist invite to get.
      
+ Request
    + Headers

            Authorization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes
            
            + artist_invites (ArtistInvite)
    
    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/artist_invite.json"
            }
            
#### Submissions [GET /api/v2/artist_invites/{slug}/submissions{?status,before,per_page}]

Get a page of submissions in reverse chronological order. Defaults to approved submissions.

Until an artist invite is closed the selected submissions will be returned as "approved" submission.

Brands and staff users may access unapproved submissions at anytime.

Selected submissions will return 204 until artist invite is closed, unless accessed by brand or staff.

+ Parameters
    + slug: ello-guest-editorial (string, required) - Slug of the artist invite to get submissions for.
    + status: selected (string, optional) - The stuatus of submissions to retreive.
        + default: approved
    + per_page: 10 (number, optional) - Number of submissions (posts) to return per page.
        + default: 10
    + before: 354 (string, optional) - Pageination cursor, where to start this page. Next page returned in the `link` header.
  
+ Request
    + Headers

            Authorization: Bearer JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (ArtistInviteSubmissionStream)
    
    + Headers

            Link: <https://ello.co/api/v2/artist_invites/:slug/submissions?before=abc&per_page=10>; rel="next"

    
    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/artist_invite_submission.json"
            }


## Group Personal Resources

These resources are only available to the currently logged in user.

### Following Stream [/api/v2/following/posts]

#### Recent Post Stream [GET /api/v2/following/posts/recent{?per_page,before}]
All the newest posts from the users you follow - time ordered.

+ Parameters
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + before: 23234324xsadfasdf (string, optional) - The pagination cursor, returned in the `link` header of the previous page.

+ Request
    + Headers

            Authortization: Bearer User Authenticated JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)
nt 
    + Headers

            Link: <https://ello.co/api/v2/following/posts/recent?before=abcd123per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }

#### Recent Stream Updated? [HEAD /api/v2/following/posts/recent]
Has the following recent stream had new posts added since I last checked? The most recent post's created_at you have should
be added as the If-Modified-Since header in the RFC2616 format.

+ Request
    + Headers

            Authortization: Bearer User Authenticated JWT
            Accept: application/json
            If-Modified-Since: Tue, 06 Jun 2007 12:48:15 GMT


+ Response 204

    Yes there are new posts! A request to GET /api/v2/following/posts/recent is a good idea.
    
    + Body

+ Response 304

    There are no new posts. Further get requests will return no new posts.
    
    + Body
    
#### Trending Post Stream [GET /api/v2/following/posts/trending{?per_page,page,images_only}]
What is trending from users you follow.

+ Parameters
    + per_page: 25 (number, optional) - Number of editorials to return per page.
        + default: 25
    + page: 3 (number, optional) - What page to retreive.
        + default: 1
    + images_only: true (string, optional) - When present only posts with images will be included.

+ Request
    + Headers

            Authortization: Bearer User Authenticated JWT
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (PostStream)

    + Headers

            Link: <https://ello.co/api/v2/following/posts/trending?page=2&per_page=25>; rel="next"

    + Schema

            {
                "$ref": "https://ello.ninja/api/schema/post.json"
            }

### Profile [/api/v2/profile]

#### View [GET /api/v2/profile]
+ Response 200 (application/json)

#### Update [PATCH /api/v2/profile]
+ Response 200 (application/json)

#### Settings [GET /api/v2/profile/settings]
+ Response 200 (application/json)

#### Blocked [GET /api/v2/profile/settings/blocked]
+ Response 200 (application/json)

#### Muted [GET /api/v2/profile/settings/muted]
+ Response 200 (application/json)

## Group Search

### User Search [/api/v2/users]

#### User Search [GET /api/v2/users?terms=terms]
+ Response 200 (application/json)

#### Username Autocomplete [GET /api/v2/users/autocomplete?terms=terms]
+ Response 200 (application/json)

### Post Search [/api/v2/posts]

#### Post Search [GET /api/v2/posts?terms=terms]
+ Response 200 (application/json)


## Group Network

TODO

## Group Other

TODO

## Data Structures

### Post
+ id: 123 (string)
+ token: f8ywrbfd9vu0wniu-bqvn (string)
+ href: /api/v2/posts/6540 (string) - Relative url to retreive this post.
+ summary (array[PostBlock])
+ content (array[PostBlock])
+ body (array[PostBlock])
+ repost_content (array[PostBlock])
+ views_count: 1523 (number) - Number of views this post has received.
+ reposts_count: 0 (number) - Number of reposts this post has recieved.
+ loves_count: 0 (number) - Number of loves this post has received.
+ comments_count: 0 (number) - Number of comments this post has received.
+ watching: false (boolean) - Is the accessing user watching for activity on this post?
+ reposted: false (boolean) - Has the accessing user reposted this post?
+ loved: false (boolean) - Has the accessing user loved this post?
+ is_adult_content: false (boolean) - Is this post marked as adult content.
+ content_warning: 3rd Party content may contain ads (string) - Displays warning for 3rd party content when applicable.
+ created_at: `2017-05-17T22:55:05.229652Z` (string) - When post was created.
+ repost_id: 123 (string)
+ author_id: 456 (string)
+ links (object)
    + author (object)
        + id:   456 (string)
        + href: /api/v2/users/456 (string)
        + type: users (string)
    + categories: 321 (array[string])
    + assets 987 (array[string])
    + reposted_source (object, optional)
        + id:   123 (string)
        + href: /api/v2/posts/123 (string)
        + type: posts (string)
    + reposted_author (object, optional)
        + id:   456 (string)
        + href: /api/v2/users/456 (string)
        + type: users (string)

### PostBlock (enum[ImagePostBlock,TextPostBlock])

### ImagePostBlock
+ kind: image (string)
+ link_url: null (string)
+ data (object)
    + url: https://assets1.ello.co/uploads/asset/attachment/987/ello-optimized-67949d24.jpg",
    + alt: ello world
+ links (object)
    + assets: 987 (string)

### TextPostBlock
+ kind: text (string)
+ link_url: null (string)
+ data: "ello world!" (string)

### User
+ id: 456 (string)

### Asset
+ id: 789 (string)
+ attachment (Image)

### Category
+ id: 888 (string)
+ name: NFP 3 (string)
+ header: NFP 3 (string)
+ description: Awesome new artist invite (string)
+ cta_caption: Submissions open (string)
+ cta_href: `https://ello.co/gross_mag/post/99jaqvjadl9dr3qg7-byna` (string)
+ allow_in_onboarding: false (boolean) - List category in onboarding as category to follow
+ uses_page_promotionals: false (boolean)
+ is_sponsored: false (boolean)
+ level: primary (string)
+ order: 2 (number)
+ tile_image (Image)
+ links (object)
    + recent (object)
        + related: /api/v2/categories/nfp3/posts/recent
        
### Promotional
+ id: 889 (string)
+ category_id: 888 (string)
+ user_id: 456 (string)
+ image (Image)
+ links (object)
    + user (object)
        + id:   456 (string)
        + href: /api/v2/users/456 (string)
        + type: users (string)

### PostStream
+ posts (array[Post])
+ linked (object)
    + users (array[User])
    + assets (array[Asset])
    + categories (array[Category])
    
### Editorial (enum[PostEditorial,InternalEditorial,ExternalEditorial,PostStreamEditorial])

### PostEditorial
+ id: 1111 (string)
+ kind: post (string)
+ title: Check out this post (string)
+ subtitle: it is amazing (string)
+ links (object)
    + post (object)
        + id: 123 (string) - Id of post, typically included in linked response
        + type: posts (string)
        + href: /api/v2/posts/1
+ one_by_one_image (Image)
+ one_by_two_image (Image)
+ two_by_one_image (Image)
+ two_by_two_image (Image)

### InternalEditorial
+ id: 1112 (string)
+ kind: internal (string)
+ title: New Category (string)
+ subtitle: Crystals! (string)
+ path: /discover/crystals (string)
+ links: null
+ one_by_one_image (Image)
+ one_by_two_image (Image)
+ two_by_one_image (Image)
+ two_by_two_image (Image)

### ExternalEditorial
+ id: 1113 (string)
+ kind: external (string)
+ title: Badges? (string)
+ subtitle: We don't need no stinking badges (string)
+ path: https://ello.co/wft/badges (string)
+ links: null
+ one_by_one_image (Image)
+ one_by_two_image (Image)
+ two_by_one_image (Image)
+ two_by_two_image (Image)

### PostStreamEditorial
+ id: 1111 (string)
+ kind: post_stream (string)
+ title: Some great posts (string)
+ links (object)
    + post_stream (object)
        + type: posts (string)
        + href: /api/v2/following/posts/trending?per_page=5&images_only=true (string) - Url to retrieve posts
+ one_by_one_image (Image)
+ one_by_two_image (Image)
+ two_by_one_image (Image)
+ two_by_two_image (Image)

### EditorialStream
+ editorials (array[Editorial])
+ linked (object)
    + posts (array[Post])
    + users (array[User])
    + assets (array[Asset])
    + categories (array[Category])

### ImageVersion
+ url: `https://assets1.ello.co/uploads/model/attribute/108/ello-hdpi-7ba79457.jpg` (string) - URL to retreive image
+ metadata (object)
    + width: 750 (number) - Image witdh in pixels
    + height: 750 (number) - Image height in pixels
    + type: image/jpeg (string) - Image format mime type
    + size: 362235 (number) - Image size in bytes

### Image
+ xhdpi (ImageVersion)
+ hdpi (ImageVersion)
+ mdpi (ImageVersion)
+ ldpi (ImageVersion)
+ original (ImageVersion)
+ optimized (ImageVersion)

### ArtistInvite
+ id: 765 (string)
+ title: Ello Guest Editor (string) - Display title
+ slug: ello-guest-editor (string) - URL for sub resources
+ invite_type: Editorship (string) - type of invite; the subtitle
+ opened_at: `2017-05-17T22:55:05.229652Z` (string) - When submissions open
+ closed_at: `2017-05-17T22:55:05.229652Z` (string) - When submissions close
+ status: upcoming, open, selecting, closed, preview (enum) - Status of the artist invite
+ description: <p>Your chance to help ...</p> (string) - Rendered html description of invite
+ short_description: <p>Your chance to help ...</p> (string) - Short, rendered html description of invite
+ submission_body_block: My #elloguesteditorial submission :ello: (string) - Raw text to be included as a block when clicking submit. Will be processed for links/notifications/emojis etc when post is created.
+ guide (array[ArtistInviteBlock])
+ header_image (Image)
+ logo_image (Image)
+ links (object)
    + brand (object)
        + type: users (string)
        + id: 222 (string) - id of user/brand running the contenst
        + href: /api/v2/users/:username (string) - Url of user/brand running the contest
    + unapproved_submissions - only present if brand or staff
        + type: artist_invite_submission_stream (string)
        + href: /api/v2/artist_invites/:slug/submissions?status=sumbitted (string) - URL to get stream of submissions
    + approved_submissions - includes approved/selected unless staff or brand
        + type: artist_invite_submission_stream (string)
        + href: /api/v2/artist_invites/:slug/submissions?status=approved (string) - URL to get a post stream of submissions
    + selected_submissions - only present if staff/brand or invite is closed
        + type: artist_invite_submission_stream (string)
        + href: /api/v2/artist_invites/:slug/submissions?status=approved (string) - URL to get a post stream of submissions

### ArtistInviteBlock
+ title: How To Submit (string) - title of the block
+ body: <p>To submit....</p> (string) - Rendered html comprising the body of the block

### ArtistInviteStream
+ artist_invites (array[ArtistInvite])

### ArtistInviteSubmission
+ id: 123_765 (string)
+ status: submitted, approved, selected (enum)
+ links (object)
    + post (object)
        + type: posts (string)
        + id: 123 (string
    + artist_invite (object)
        + type: artist_invite (string)
        + id: 789 (string)
    + approve (object, optional)
        + type: artist_invite_submission (string)
        + method: PATCH (string)
        + href: /api/v2/artist_invite_submission/123_765/approve
    + unapprove (object, optional)
        + type: artist_invite_submission (string)
        + method: PATCH (string)
        + href: /api/v2/artist_invite_submission/123_765/unapprove
    + select (object, optional)
        + method: PATCH (string)
        + type: artist_invite_submission (string)
        + href: /api/v2/artist_invite_submission/123_765/select

### ArtistInviteSubmissionStream
+ artist_invite_submissions (array[ArtistInviteSubmission])
+ linked (object)
    + posts (array[Post])